
long型变量在32位机器上读写。
long型变量是64位，在32位CPU上执行写操作会被拆分成两次写操作(写高32位 和 写低32位)。
多线程环境下，两个线程同时写long型变量高32位的话，就可能会出现Bug。

 原子性(中间状态对外不可见)问题的源头是线程切换，禁用线程切换是不是就解决了这个问题了？
而操作系统做线程切换是依赖CPU中断的，所以禁止CPU发生中断就能够禁止线程切换。

同一时刻只有一个线程执行，我们称为互斥。

锁 :

  我们把一段需要互斥执行的代码称为临界区。

 synchronized :
  java编译器在synchronized修饰的方法或者代码块前后自动加上 加锁lock() 和解锁unlock()。
  这样做的好处是加锁和解锁一定是成对出现的。
  当修饰静态方式的时候，锁定的是当前类的Class对象。
  当修饰非静态方法的时候，锁定的是当前实例对象this。

  细粒度锁： 用不同的锁对受保护资源进行精细化管理，能够提升性能。